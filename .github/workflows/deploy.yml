name: Deploy to AWS S3 and CloudFront

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: production
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Verify Node.js and npm versions
      run: |
        echo "Node.js version: $(node --version)"
        echo "npm version: $(npm --version)"
        echo "Next.js version: $(npm list next)"
      
    - name: Build application
      run: npm run build
      env:
        NEXT_PUBLIC_STRAPI_URL: ${{ secrets.NEXT_PUBLIC_STRAPI_URL }}
        STRAPI_TOKEN: ${{ secrets.STRAPI_TOKEN }}
        NEXT_PUBLIC_SITE_URL: ${{ secrets.NEXT_PUBLIC_SITE_URL }}
        
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}
        
    - name: Deploy to S3
      run: |
        aws s3 sync .next s3://${{ secrets.S3_BUCKET_NAME }}/_next --delete --cache-control "max-age=31536000,public"
        aws s3 sync public s3://${{ secrets.S3_BUCKET_NAME }}/public --delete --cache-control "max-age=31536000,public"
        aws s3 cp .next s3://${{ secrets.S3_BUCKET_NAME }}/_next --recursive --exclude "*" --include "*.html" --cache-control "no-cache,no-store,must-revalidate"
        
    - name: Invalidate CloudFront cache
      run: |
        aws cloudfront create-invalidation \
          --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} \
          --paths "/*"
          
    - name: Deploy success
      run: echo "Deployment completed successfully!"
