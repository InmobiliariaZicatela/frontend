@use "sass:color";

// ============================================================================
// PROPERTY DETAIL COMPONENT STYLES
// ============================================================================

// PropertyDetail-specific variables (using global color scheme)
$primary-color: #0065f2;
$secondary-color: #6c757d;
$border-radius: 16px;
$transition: all 0.3s ease;
$breakpoint-sm: 576px;
$breakpoint-md: 768px;
$breakpoint-lg: 1080px;
$breakpoint-xl: 1200px;

// PropertyDetail-specific variables
$property-detail-gap: 60px;
$section-gap: 1.5rem;
$card-border-radius: 12px;
$card-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
$card-hover-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);

// Mixin for property-detail responsive breakpoints
@mixin property-detail-responsive($breakpoint) {
  @if $breakpoint == mobile {
    @media (max-width: $breakpoint-sm) {
      @content;
    }
  } @else if $breakpoint == tablet {
    @media (max-width: $breakpoint-md) {
      @content;
    }
  } @else if $breakpoint == tablet-plus {
    @media (max-width: $breakpoint-lg) {
      @content;
    }
  } @else if $breakpoint == desktop {
    @media (min-width: #{$breakpoint-md + 1px}) and (max-width: $breakpoint-lg) {
      @content;
    }
  } @else if $breakpoint == large-desktop {
    @media (min-width: #{$breakpoint-lg + 1px}) and (max-width: $breakpoint-xl) {
      @content;
    }
  } @else if $breakpoint == extra-large {
    @media (min-width: #{$breakpoint-xl + 1px}) {
      @content;
    }
  }
}

// PropertyDetail container styles
.property-detail-container {
  gap: $property-detail-gap;
  flex-direction: row;
  align-items: stretch;
  min-height: 80vh;

  // Specific fix for problematic range around 1045px
  @media (max-width: 1100px) {
    flex-direction: column;
    gap: 40px;
  }

  @include property-detail-responsive(mobile) {
    gap: 30px;
  }
}

// Property main section (info + image)
.property-main-section {
  gap: $property-detail-gap;
  align-items: stretch;
  display: flex;
  min-height: 60vh;

  @include property-detail-responsive(tablet) {
    flex-direction: column;
    gap: 40px;
  }

  @include property-detail-responsive(mobile) {
    gap: 30px;
  }
}

// Loading spinner styles
.loading-spinner {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 20px;
  padding: 60px 0;

  .spinning {
    animation: spin 1s linear infinite;
  }

  @keyframes spin {
    from {
      transform: rotate(0deg);
    }
    to {
      transform: rotate(360deg);
    }
  }
}

// Error message styles
.error-message {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 20px;
  padding: 60px 0;
  text-align: center;

  .text-danger {
    color: #dc3545;
  }

  .btn-secondary {
    margin-top: 20px;
  }
}

// Property no image styles
.property-no-image {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  gap: 20px;
  padding: 60px 20px;
  text-align: center;
  background-color: #f8f9fa;
  border-radius: $card-border-radius;
  min-height: 300px;

  .text-muted {
    color: $secondary-color;
  }
}

// Left Column - Property Information Section
.property-info-section {
  flex: 1;
  max-width: 50%;

  // Specific fix for problematic range around 1045px
  @media (max-width: 1100px) {
    max-width: 100%;
  }
}

.property-info-content {
  display: flex;
  flex-direction: column;
  // gap: $section-gap;
  height: 100%;
  justify-content: center;

  @include property-detail-responsive(mobile) {
    gap: 20px;
  }
}

// Property title styles
.property-title {
  color: $primary-color;
  margin-bottom: 0;
  line-height: 1.2;

  @include property-detail-responsive(mobile) {
    font-size: 1.8rem;
  }
}

// Property address styles
.property-address {
  color: $secondary-color;
  margin-bottom: $section-gap;
  font-weight: 500;

  @include property-detail-responsive(mobile) {
    font-size: 1rem;
  }
}

// Property description styles
.property-description {
  color: $secondary-color;
  line-height: 1.6;
  margin-bottom: $section-gap;

  @include property-detail-responsive(mobile) {
    font-size: 0.9rem;
  }
}

// Property price section styles
.property-price-section {
  margin-bottom: $section-gap;

  .property-price {
    color: $primary-color;
    font-size: 1.5rem;

    @include property-detail-responsive(mobile) {
      font-size: 1.2rem;
    }
  }
}

// PDF download section styles
.property-pdf-section {
  margin-bottom: $section-gap;

  .property-pdf-link {
    display: flex;
    align-items: center;
    gap: 8px;
    color: $primary-color;
    text-decoration: underline;
    font-weight: 500;
    transition: $transition;
    background: none;
    border: none;
    cursor: pointer;
    padding: 0;
    font-size: 1rem;

    &:hover {
      color: color.scale($primary-color, $lightness: -15%);
      text-decoration: none;
    }

    @include property-detail-responsive(mobile) {
      font-size: 0.9rem;
    }
  }
}

// Call to action section styles
.property-cta-section {
  .property-cta-btn {
    width: 100%;
    max-width: 300px;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 8px;

    @include property-detail-responsive(mobile) {
      max-width: 100%;
    }
  }
}

// Right Column - Property Image Section
.property-image-section {
  flex: 1;
  max-width: 50%;

  // Specific fix for problematic range around 1045px
  @media (max-width: 1100px) {
    max-width: 100%;
  }
}

.property-image-container {
  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: column;
  gap: 20px;
  justify-content: center;
}

// Main image styles
.property-main-image {
  width: 100%;
  height: 500px;
  border-radius: $card-border-radius;
  overflow: hidden;
  box-shadow: $card-shadow;
  position: relative;

  .main-image {
    width: 100%;
    height: 100%;
    object-fit: cover;
    object-position: center;
    transition: $transition;

    &:hover {
      transform: scale(1.02);
    }
  }

  .image-error-fallback {
    width: 100%;
    height: 100%;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    background-color: #f8f9fa;
    color: #6c757d;
    gap: 16px;
  }

  // Specific fix for problematic range around 1045px
  @media (max-width: 1100px) {
    height: 450px;
  }

  @include property-detail-responsive(tablet-plus) {
    height: 400px;
  }

  @include property-detail-responsive(mobile) {
    height: 300px;
  }
}

// Thumbnails styles
.property-thumbnails {
  display: flex;
  gap: 12px;
  overflow-x: auto;
  padding: 4px 0;
  justify-content: center;

  .thumbnail {
    flex-shrink: 0;
    width: 80px;
    height: 60px;
    border-radius: 8px;
    overflow: hidden;
    cursor: pointer;
    transition: $transition;
    border: 2px solid transparent;
    position: relative;

    &:hover {
      transform: translateY(-2px);
      box-shadow: $card-hover-shadow;
    }

    &.active {
      border-color: $primary-color;
      box-shadow: 0 0 0 2px rgba($primary-color, 0.2);
    }

    img {
      width: 100%;
      height: 100%;
      object-fit: cover;
      object-position: center;
    }

    @include property-detail-responsive(mobile) {
      width: 60px;
      height: 45px;
    }
  }

  // Custom scrollbar for thumbnails
  &::-webkit-scrollbar {
    height: 4px;
  }

  &::-webkit-scrollbar-track {
    background: rgba($primary-color, 0.1);
    border-radius: 2px;
  }

  &::-webkit-scrollbar-thumb {
    background: $primary-color;
    border-radius: 2px;
  }

  &::-webkit-scrollbar-thumb:hover {
    background: color.scale($primary-color, $lightness: -10%);
  }
}

// Responsive adjustments
@include property-detail-responsive(mobile) {
  .property-detail-container {
    gap: 20px;
  }

  .property-info-content {
    gap: 10px;
  }

  .property-title {
    font-size: 1.5rem;
  }

  .property-address {
    font-size: 0.9rem;
  }

  .property-description {
    font-size: 0.85rem;
  }

  .property-price {
    font-size: 1.1rem;
  }

  .property-pdf-link {
    font-size: 0.85rem;
  }

  .property-cta-btn {
    font-size: 1rem;
    padding: 12px 20px;
  }
}

// Tablet adjustments
@include property-detail-responsive(tablet-plus) {
  .property-detail-container {
    gap: 40px;
  }

  .property-main-image {
    height: 350px;
  }
}

// Desktop adjustments
@include property-detail-responsive(desktop) {
  .property-detail-container {
    gap: 50px;
  }
}

// Specific adjustments for problematic range (1000px - 1100px)
@media (min-width: 1000px) and (max-width: 1100px) {
  .property-detail-container {
    flex-direction: column;
    gap: 40px;
  }

  .property-info-section {
    max-width: 100%;
  }

  .property-image-section {
    max-width: 100%;
  }

  .property-main-image {
    height: 450px;
  }
}

// Large desktop adjustments
@include property-detail-responsive(large-desktop) {
  .property-detail-container {
    gap: 60px;
  }
}
